{
    "events": [
      {
        "cocUrl": "http://confcodeofconduct.com/",
        "collaborators": [
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/collaborators/53/avatar.png",
            "firstName": "Guillaume",
            "github": "",
            "id": 53,
            "lastName": "BOUDON",
            "role": "co-organizer",
            "twitter": "",
            "url": ""
          }
        ],
        "description": "Elm Europe will be a two-day conference dedicated to Elm, taking place at the EFREI Engineering School in Villejuif (near Paris, France) on July, 5-6th 2018.\n\nThe event is organized by the Elm community, for the Elm community, with the willing of sharing knowledge, news about the language, and meeting interesting people.\n\nIf you need Elm developers, please go to our job board : https://elm.jobboardmaker.com/job_offers\n\nYoutube channel : https://www.youtube.com/channel/UCT5HLUjjXdqUSUnpblFNOwQ",
        "endDate": "Fri Jul 06 20:00:00 +0000 2018",
        "groupedSchedule": [
          {
            "date": "Thu Jul 05 06:30:00 +0000 2018",
            "slots": [
              {
                "description": "",
                "id": 1539,
                "keynote": null,
                "length": 30,
                "likes": 0,
                "room": null,
                "speakers": [],
                "startDate": "Thu Jul 05 06:30:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Check in",
                "type": 8,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "",
                "id": 1540,
                "keynote": null,
                "length": 30,
                "likes": 0,
                "room": null,
                "speakers": [],
                "startDate": "Thu Jul 05 07:00:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Breakfast",
                "type": 3,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "",
                "id": 1538,
                "keynote": null,
                "length": 50,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/928/avatar.png",
                    "bio": "Creator of elm",
                    "github": "evancz",
                    "id": 928,
                    "name": "Evan Czaplicki",
                    "twitter": "czaplic"
                  }
                ],
                "startDate": "Thu Jul 05 07:30:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Keynote",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "minilatex is an Elm package for converting a subset of LaTeX into Html -- a way to put LaTeX into the browser.  We will talk about the design and implementation of the parser and renderer, and how the package is used in a web app to create and publish technical documents.  The package itself is pure Elm and relies on Evan Czaplicki's elm-tools/parser. It uses a diffing strategy suggested by Ilias van Peer which make performance in a day-to-day editing environment extremely fast (yay!)\n\nThe app ( under development at http://www.knode.io) will also process mathematical text. For this, it uses ports, since to process mathematical text, one must use the MathJax.js package as a kind of rendering server. We will briefly touch on this part of the design, and describe some of the technical challenges and performance issues.",
                "id": 1169,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/936/avatar.png",
                    "bio": "In other life, a mathematician.  Using Elm and Elixir to develop an awesome course notes app (http://www.knode.io - prerelease).  Fan of functional programming. Learning the double bass.",
                    "github": "jxxcarlson",
                    "id": 936,
                    "name": "James Carlson",
                    "twitter": "epsilon2718"
                  }
                ],
                "startDate": "Thu Jul 05 08:40:00 +0000 2018",
                "tags": "elm, content management app, latex, parser, ports",
                "talk": null,
                "title": "Making a Latex-to-Html Parser in Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "I'm a (co-)founder of Syncrypt, an open source, zero-knowledge, client-side & end-to-end encrypted file backup and sharing service. We started out with a CLI client & daemon written in Python, that does all encryption and uploading. Later we started working on a GUI written in JS, React and Electron. Since we're all mostly backend engineers by trade, we got tired of using JS (& React to be honest) after a short while of using it and decided to look for alternatives. I found out about Elm due to researching alternatives to React. It took me about 3 days to fully get the hang of the language but I felt productive from day 1. I'll talk about the learning curve, about how great the development tools are in learning the language itself and how I ended up with a working prototype (including JSON parsing!) after the first 3 days of working on the Elm based rewrite. The Elm UI talks to the python daemon via HTTP & JSON.",
                "id": 1175,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1143/avatar.png",
                    "bio": "I'm a programming language enthusiast. I've written lots of Ruby in the past, started using Elixir about 3 years ago and this year also started to use Elm for a new open source product I'm working on with friends in my spare time (Syncrypt).",
                    "github": "bakkdoor",
                    "id": 1143,
                    "name": "Christopher Bertels",
                    "twitter": "bakkdoor"
                  }
                ],
                "startDate": "Thu Jul 05 09:20:00 +0000 2018",
                "tags": "encryption, file-sharing, streaming, electron, ports, javascript, react",
                "talk": null,
                "title": "Learning Elm in 3 days using the compiler - Switching from JS & React to Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Imagine Alice and Bob editing the same text document at the same time from different devices -- but both being offline. How could their changes be merged eventually so that both ends yield the same result and the intention of both probably conflicting editions is preserved?\nConflict-free replicated data types (CRDTs) to the rescue! In a mobile world with unreliable network connectivity, CRDTs allow for distributed offline-first applications integrating concurrent changes in a lightweight way. Data replicas are guaranteed to be eventually consistent among peers while keeping the context and order of merged operations. In this talk I will briefly describe CRDTs in general and why they matter to reactive Web development. Furthermore, I will present an Elm implementation of LSEQ - a CRDT for sequential data like text - and its binary serialization format. Finally, I will demo a collaborative Web app built on top of it.",
                "id": 1414,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1380/avatar.png",
                    "bio": "Entreprenerd shooting for the stars.",
                    "github": "myrho",
                    "id": 1380,
                    "name": "Matthias Rella",
                    "twitter": "my_rho"
                  }
                ],
                "startDate": "Thu Jul 05 10:00:00 +0000 2018",
                "tags": "CRDT, collaboration, offline-first, reactive, mobile",
                "talk": null,
                "title": "ElmSEQ: A conflict-free replicated data type for Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Have you wanted to publish a package, but don't know where to begin? The Elm package ecosystem is filled with wonderful and useful packages, and it can be intimidating to try and add to that. But while it can take real effort to create something good, it doesn't have to feel so overwhelming! In this talk, I'll show you small, concrete steps to take so you can finally publish that code you've been sitting on. You'll leave with the confidence that you can make something really nice!",
                "id": 1137,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1086/avatar.png",
                    "bio": "Brian Hicks is the lead organizer of elm-conf and the author of The JSON Survival Kit. He lives in St. Louis with his wife, son, and cat, and works at NoRedInk.",
                    "github": "BrianHicks",
                    "id": 1086,
                    "name": "Brian Hicks",
                    "twitter": "brianhicks"
                  }
                ],
                "startDate": "Thu Jul 05 10:40:00 +0000 2018",
                "tags": "documentation,packages,ecosystem",
                "talk": null,
                "title": "Let's Publish Nice Packages",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "",
                "id": 1541,
                "keynote": null,
                "length": 120,
                "likes": 0,
                "room": null,
                "speakers": [],
                "startDate": "Thu Jul 05 11:00:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Lunch",
                "type": 4,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "We are drawn to Elm for many reasons: ‘compiler as assistant’, friendly error messages, pedagogic documentation, static typing, immutable data structures, pure functions. Yet the whole is more than the sum of its parts resulting in a programming philosophy that is declarative, task focussed and beginner-friendly. This talk considers how that philosophy influenced the design of elm-vega and the adoption of Elm as the primary language to illustrate Literate Visualization (LitVis).\n\nLitVis combines declarative specification of a visualization with a narrative that justifies its design. Elm and Vega are ideal languages for expression of the design and we describe how we integrated them with markdown to create a LitVis environment in Atom and VS Code. We describe how the Elm philosophy has influenced the design of LitVis and lessons learned. This has relevance not only for those interested in visualization with Elm but also anyone designing new packages and programming environments.",
                "id": 1428,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1372/avatar.png",
                    "bio": "Alex is a visual data scientist who is interested in connecting computer power with the the power of the human brain to solve complex data-rich problems. His journey into Elm began in November 2017 when his former PhD supervisor Professor Jo Wood demoed him elm-vega and invited to take part in making LitVis. Before re-joining giCentre (City, University of London), Alex worked as a senior design researcher at Superspace, where he helped making humane urban environments with visual analytics.",
                    "github": "kachkaev",
                    "id": 1372,
                    "name": "Alexander Kachkaev",
                    "twitter": "gicentre"
                  }
                ],
                "startDate": "Thu Jul 05 13:00:00 +0000 2018",
                "tags": "litvis, visualization, datavis, literate programming, vega, vega-lite, d3, atom, vscode",
                "talk": null,
                "title": "Infecting the Visualization Design Process with the Elm Philosophy",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "This talk will look at some of the lessons learned from migrating the codebase of the opensolid/geometry package from its object-oriented origins in C++ and Scala to its current implementation in Elm.\n\nWe'll show how to take code that depends on various features found in object-oriented languages and rewrite that code in idiomatic Elm. For example, in a language without overloading or implicit conversions, how do you write functions that work with both vectors and unit vectors? Without inheritance, how do you share 3D transformation functionality between different types of geometry? Answering these questions carefully can require some significant \"conceptual refactoring\", but often results in Elm code that is simpler, clearer and more flexible than the original!",
                "id": 1241,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1174/avatar.png",
                    "bio": "Ian is the author of opensolid/geometry and several related Elm packages. He's passionate about using Elm as a platform for 3D design, visualization, engineering and manufacturing tools. He currently lives in New York and is at the Elm NYC meetup almost every month. He's on the Elm Slack as @ianmackenzie and is always happy to talk about geometry, using Elm to help make physical things, or just the nitty-gritty of WebGL rendering.",
                    "github": "ianmackenzie",
                    "id": 1174,
                    "name": "Ian Mackenzie",
                    "twitter": "ianemackenzie"
                  }
                ],
                "startDate": "Thu Jul 05 13:40:00 +0000 2018",
                "tags": "object oriented, functional, geometry",
                "talk": null,
                "title": "Now you're thinking in functions: transitioning a decade-old codebase from C++ and Scala to Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Regardless of your knowledge level, writing a course is a good way to improve your skills. Explaining a concept lets you watch it under a different point of view, out of habits based on practice! Shall we wait to be an \"expert\" to publish a tutorial? How to explain what seems so simple or, by contrast, so complicated? Come to discover it!",
                "id": 1520,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1463/avatar.png",
                    "bio": "Developer and teacher, I created a training path dedicated to Python for OpenClassrooms, the European e-learning leading platform. Before that, I entered the startup world creating my own. When I'm not coding, I like laughing and hiking.",
                    "github": "celine-m-s",
                    "id": 1463,
                    "name": "Céline Martinet Sanchez",
                    "twitter": ""
                  }
                ],
                "startDate": "Thu Jul 05 14:20:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Teaching is learning: become a better dev sharing your knowledge.",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "We get a lot for free from using the web platform. Rendering text is one of such things that browsers do well. But what if we wanted to implement this ourselves from scratch? Then we would not only have to learn typographic terms, but also understand their true behavior.\n\nHaving implemented the rendering of a typeface, that my wife designed, I would like to share the challenges of modelling the text flow in Elm. Even though this has a limited practical applicability, my hope is that you would not only get some insights into typeface properties, but also learn to appreciate the tools we have. And of course you will see how good it fits with Elm!",
                "id": 1438,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1403/avatar.png",
                    "bio": "Andrey is a frontend engineer at SoundCloud. He is a maintainer of WebGL in Elm and an organizer of the Elm Berlin meetup. Apart from work, he enjoys live music in Berlin and is a yoga newbie.",
                    "github": "w0rm",
                    "id": 1403,
                    "name": "Andrey Kuzmin",
                    "twitter": "unsoundscapes"
                  }
                ],
                "startDate": "Thu Jul 05 15:00:00 +0000 2018",
                "tags": "webgl, typeface, text",
                "talk": null,
                "title": "Rendering text with WebGL",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "In this talk we will use the amazing powers of Elm to live code a Mondrian Art Generator. We will do a deep dive on building complex random generators and see how we can combine them to generate conceptual art. After that, we will go through a proof of concept that uses recursive random generators to achieve a similar effect.",
                "id": 1369,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1313/avatar.png",
                    "bio": "Italian. Working @NoRedInk. I like Elixir, Ruby, JavaScript and Machine Learning. I climb a lot.",
                    "github": "Arkham",
                    "id": 1313,
                    "name": "Ju Liu",
                    "twitter": "arkh4m"
                  }
                ],
                "startDate": "Thu Jul 05 15:40:00 +0000 2018",
                "tags": "mondrian, art, random",
                "talk": null,
                "title": "Live Coding a Mondrian Art Generator",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              }
            ],
            "title": "Thursday"
          },
          {
            "date": "Fri Jul 06 06:30:00 +0000 2018",
            "slots": [
              {
                "description": "",
                "id": 1542,
                "keynote": null,
                "length": 30,
                "likes": 0,
                "room": null,
                "speakers": [],
                "startDate": "Fri Jul 06 06:30:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Check in",
                "type": 8,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "",
                "id": 1543,
                "keynote": null,
                "length": 30,
                "likes": 0,
                "room": null,
                "speakers": [],
                "startDate": "Fri Jul 06 07:00:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Breakfast",
                "type": 3,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "",
                "id": 1545,
                "keynote": null,
                "length": 50,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/929/avatar.png",
                    "bio": "Author of Elm in Action",
                    "github": "rtfeldman",
                    "id": 929,
                    "name": "Richard Feldman",
                    "twitter": "rtfeldman"
                  }
                ],
                "startDate": "Fri Jul 06 07:30:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Keynote",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Having total type-safety within an application in Elm makes working on projects a joy, especially long term when things get increasingly complicated and changing requirements abound. \n\nHowever what about type safety _between_ versions of our apps? \n\nOnce our applications are out in the wild, how do we get our users from version A to version B without throwing everything away in the transition? Could we use Elm's guarantees somehow to help us make this process smooth and enjoyable?\n\nThis talk will explore 12 months of research and prototyping on turning \"decidious\" Elm deployments into an \"evergreen\" affair.",
                "id": 1408,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1375/avatar.png",
                    "bio": "I am a technology aficionado with a particular love for the web. I believe technology should make life simple and joyful, and I enjoy being able to prove so.\n\nAn Australian currently living in London with my wife, working for locomote.com as Head of Technology.\n\nI organise and run the Elm London Meetups, and frequently teach and speak about Elm to diverse audiences.",
                    "github": "supermario",
                    "id": 1375,
                    "name": "Mario Rogic",
                    "twitter": "realmario"
                  }
                ],
                "startDate": "Fri Jul 06 08:40:00 +0000 2018",
                "tags": "type safety, deployment, exploration, experimentation",
                "talk": null,
                "title": "Evergreen Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "The UI client of our ARIC Fraud Hub product is a 100k LOC Elm app.\nOver the last 18 months we ported it from Agnular 1 to Elm, and added many new features. \nOn the way we learned a lot. We'll present a summary of that story:\nHow we chose and adopted Elm.\nHow we made Elm and Angular play nice together during the migration.\nWhat we learned from using Elm with a team of ~6 engineers on a large complex project.\nAnd what we want in the future: from Elm and from ourselves.",
                "id": 1353,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1319/avatar.png",
                    "bio": "UI Engineer at Featurespace.  Previously web developer in Elm, Elixir & Python; digital factotum and academic (programming language theory). Runs the Cambridge (UK) Elm Meetup.",
                    "github": "bitterjug",
                    "id": 1319,
                    "name": "Mark Skipper",
                    "twitter": "axiologic"
                  },
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1320/avatar.png",
                    "bio": "Head of UI team at Featurespace. Main focus on Web Development,  10+ years experience in JavaScript and Ruby, and now also Elm.",
                    "github": "decioferreira",
                    "id": 1320,
                    "name": "Decio Ferreira",
                    "twitter": "deciojf"
                  }
                ],
                "startDate": "Fri Jul 06 09:20:00 +0000 2018",
                "tags": "industrial perspective, 100kloc",
                "talk": null,
                "title": "With Great Power Comes Great Responsibility: Lessons from 100k LOC Elm in production at Featurespace",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Elm helps us to think in terms of algorithms, not just in terms of \"let's make it work\". We can focus on one task at a time, without having the overhead of having to think in terms of \"the whole app\".\n\nAnd it allows us to pick highly complex subjects and tackle them for fun and profit.\n\nCreating a date picker like https://developer.apple.com/documentation/uikit/uidatepicker is very complex. We have to model the display with inline css 3d and requestanimationframe, the touch with touch events, the physics of the date picker with some physics theory. And doing that is javascript would mean handling every aspect of it in a \"global\" way.\n\nCreating a native looking date picker in elm means we can concentrate on the bigger vision (the date picker), one little function at a time, and it means we can do it in a reusable manner.\n\nThis talk will outline how we did it and what the result looks like, and it'll emphasise how we designed it.",
                "id": 1376,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1343/avatar.png",
                    "bio": "Developer\nStartup creator\nEvent organizer",
                    "github": "tibastral",
                    "id": 1343,
                    "name": "Thibaut Assus",
                    "twitter": "tibastral"
                  }
                ],
                "startDate": "Fri Jul 06 10:00:00 +0000 2018",
                "tags": "algorithms, physics, css3d, requestanimationframe",
                "talk": null,
                "title": "How to build a native looking date picker with elm, physics and css 3d",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "In this talk, I will share how my team at Second Spectrum went from the first group that was using Elm in production to how we spread excitement for Elm to other groups within our organization.  Through the talk, I will share lessons learned in terms of the challenges involved in onboarding those new to Elm (and functional programming) and the benefits we saw on our team after we started using Elm, as well as suggestions for those looking to use Elm in their organizations.  Finally, I’ll explain how, once we had lots of folks within our company using Elm, we leveraged that energy to start Elm LA, a local meetup that we started last year in Los Angeles, CA.  The audience will come away from the talk with actionable strategies on how to get buy-in within their organizations to start using Elm.",
                "id": 1517,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1330/avatar.png",
                    "bio": "Emma is a Senior Software Engineer at Second Spectrum, where she gets to solve all kinds of fun problems around how to build compelling data visualization and analytics apps for clients like the NBA and the LA Clippers. She co-founded and co-organizes the Elm LA meetup community as well as the local LA chapter of Write/Speak/Code.  Long ago, before becoming a software engineer, she became a lambda calculus enthusiast while working on formal semantics in a PhD program in theoretical linguistics.",
                    "github": "emmacunningham",
                    "id": 1330,
                    "name": "Emma Cunningham",
                    "twitter": "emmatcu"
                  }
                ],
                "startDate": "Fri Jul 06 10:40:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Getting your organization onboard with Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "",
                "id": 1544,
                "keynote": null,
                "length": 120,
                "likes": 0,
                "room": null,
                "speakers": [],
                "startDate": "Fri Jul 06 11:00:00 +0000 2018",
                "tags": "",
                "talk": null,
                "title": "Lunch",
                "type": 4,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "One of the selling points of Elm is that you cannot get null errors. `Maybe` is\nwhat allows Elm to avoid this billion-dollar problem entirely. It's a beautiful\nsolution.\n\nBut it doesn't take too long before your code is one long ugly nested case\nstatement checking `Maybe`s at every level. Surely this can't be right. There must\nbe a better way.\n\nWe have an array of tools at our disposal to solve this problem, from simple\nconvenience functions all the way to eliminating `Maybe` altogether in favor of\nother constructs. Join me on a whirlwind tour of these solutions and take back\ncontrol of your codebase.",
                "id": 1234,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1154/avatar.png",
                    "bio": "Joël is a software developer at thoughtbot. He is passionate about best practices and building excellent software. Although he got his start with dynamically typed imperative languages, he has recently become fascinated with the statically typed functional world and Elm in particular. Outside of programming, Joël loves to study history. He often combines these two interests together to play with historically-themed software side projects.",
                    "github": "JoelQ",
                    "id": 1154,
                    "name": "Joël Quenneville",
                    "twitter": "joelquen"
                  }
                ],
                "startDate": "Fri Jul 06 13:00:00 +0000 2018",
                "tags": "maybe, union types, design",
                "talk": null,
                "title": "Working with Maybe",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Some things can't be done with Elm. It's a young language with so much potential to be realized in the years ahead. If a program you are writing today falls outside of Elm's capabilities, like writing a server, it can better to choose a different language. When it comes to fancy UI features, though, you might be able to have your cake and eat it too. In this talk you will learn about when and how to use web components in your Elm views. The most common inquiry we'll cover is interop with fancy JS UI packages that are not economically viable to replicate in Elm, like rich text editors. We'll also talk about components that make visual changes outside of the Elm update cycle for performance-critical UI behaviors, and more. The examples covered in this talk are based on production experience, fully compatible with Elm and all WHATWG specs, and can be polyfilled at least as far back as IE 11 and Safari 9.",
                "id": 1401,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1211/avatar.png",
                    "bio": "Luke is an engineer at NoRedInk and the developer of the online Elm editor Ellie. He lives in Los Angeles, CA, USA where he enjoys spending time with his wife and dog, studying politics and economics, and playing music.",
                    "github": "lukewestby",
                    "id": 1211,
                    "name": "Luke Westby",
                    "twitter": ""
                  }
                ],
                "startDate": "Fri Jul 06 13:40:00 +0000 2018",
                "tags": "interop, web component, javascript, elm, ui, view, custom element",
                "talk": null,
                "title": "When and how to use Web Components with Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "There are a lot of hidden and forgotten gems in Smalltalk. One of them is the System Browser: the main way to develop Smalltalk, and a way to explore and evolve the environment. elm-browser explores the usability of such tool in the Elm ecosystem, hopefully allowing for a faster and more to-the-point development cycle.",
                "id": 1312,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/935/avatar.png",
                    "bio": "A Christian, pianist, and... A NEW DAD!!! Working at RAYNET in Czech Republic.",
                    "github": "Janiczek",
                    "id": 935,
                    "name": "Martin Janiczek",
                    "twitter": "janiczek"
                  }
                ],
                "startDate": "Fri Jul 06 14:20:00 +0000 2018",
                "tags": "code editor, smalltalk",
                "talk": null,
                "title": "elm-browser - Smalltalk goodness for Elm",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Elm’s basis in immutability presents a unique set of challenges to animators.\n\nIn a language that allows mutation we can get away with hiding all our details behind local state, but in Elm we have to capture every detail in our model.  This means many of the APIs we may be familiar with in languages like Javascript don’t translate directly over to Elm in the nicest way.  Or they do translate, but require a lot of manual wiring and record keeping.\n\nHowever immutability is an incredible advantage and there’s no reason that advantage doesn’t translate into the realm of animation. The main challenge is adjusting our thinking around animation in Elm.\nSo, what does an immutable animator’s toolkit look like?\n\nBy slightly shifting our thinking and embracing Elm’s design decisions we can arrive at a unique set of tools and techniques that provides high level control over our animations and feels unique to the Elm language.",
                "id": 1261,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1230/avatar.png",
                    "bio": "Author of Style Elements, Elm Style Animation, and the O'Reilly book, Why Elm?, Matt is a Developer-in-Residence at Cornell Tech.",
                    "github": "mdgriffith",
                    "id": 1230,
                    "name": "Matthew Griffith",
                    "twitter": "mech_elephant"
                  }
                ],
                "startDate": "Fri Jul 06 15:00:00 +0000 2018",
                "tags": "animation",
                "talk": null,
                "title": "The Immutable Animator’s Toolkit",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              },
              {
                "description": "Github is a vast collection of code which could give us insights into how people are using Elm. The problem is that all the code is represented as text which limits our ability to analyze it automatically. In this talk, you will learn how we can leverage Elms statically typed nature to parse all public elm code on Github into a structured form which allows us to ask interesting questions like: \n\n- Give me examples how to use a specific library function? \n- How many people would be affected by changing some library functionality?\n- Is this library still used in recent code?",
                "id": 1419,
                "keynote": null,
                "length": 20,
                "likes": 0,
                "room": null,
                "speakers": [
                  {
                    "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1288/avatar.png",
                    "bio": "Passionate developer, studying computer science. At home on the web. Building things with JavaScript, Elm, and Clojure.",
                    "github": "paulsonnentag",
                    "id": 1288,
                    "name": "Paul Sonnentag",
                    "twitter": "paulsonnentag"
                  }
                ],
                "startDate": "Fri Jul 06 15:40:00 +0000 2018",
                "tags": "code analysis, graph",
                "talk": null,
                "title": "3.9 million lines later - analyzing all open source elm code",
                "type": 0,
                "youtubeId": "",
                "youtubeUrl": ""
              }
            ],
            "title": "Friday"
          }
        ],
        "id": 167,
        "name": "elm Europe 2018",
        "offset": 7200,
        "slug": "elm-europe-2018",
        "speakers": [
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/928/avatar.png",
            "bio": "Creator of elm",
            "github": "evancz",
            "id": 928,
            "name": "Evan Czaplicki",
            "talks": [
              {
                "description": "",
                "id": 1538,
                "length": 50,
                "startDate": "Thu Jul 05 07:30:00 +0000 2018",
                "title": "Keynote",
                "type": 0
              }
            ],
            "twitter": "czaplic"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/929/avatar.png",
            "bio": "Author of Elm in Action",
            "github": "rtfeldman",
            "id": 929,
            "name": "Richard Feldman",
            "talks": [
              {
                "description": "",
                "id": 1545,
                "length": 50,
                "startDate": "Fri Jul 06 07:30:00 +0000 2018",
                "title": "Keynote",
                "type": 0
              }
            ],
            "twitter": "rtfeldman"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/935/avatar.png",
            "bio": "A Christian, pianist, and... A NEW DAD!!! Working at RAYNET in Czech Republic.",
            "github": "Janiczek",
            "id": 935,
            "name": "Martin Janiczek",
            "talks": [
              {
                "description": "There are a lot of hidden and forgotten gems in Smalltalk. One of them is the System Browser: the main way to develop Smalltalk, and a way to explore and evolve the environment. elm-browser explores the usability of such tool in the Elm ecosystem, hopefully allowing for a faster and more to-the-point development cycle.",
                "id": 1312,
                "length": 20,
                "startDate": "Fri Jul 06 14:20:00 +0000 2018",
                "title": "elm-browser - Smalltalk goodness for Elm",
                "type": 0
              }
            ],
            "twitter": "janiczek"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/936/avatar.png",
            "bio": "In other life, a mathematician.  Using Elm and Elixir to develop an awesome course notes app (http://www.knode.io - prerelease).  Fan of functional programming. Learning the double bass.",
            "github": "jxxcarlson",
            "id": 936,
            "name": "James Carlson",
            "talks": [
              {
                "description": "minilatex is an Elm package for converting a subset of LaTeX into Html -- a way to put LaTeX into the browser.  We will talk about the design and implementation of the parser and renderer, and how the package is used in a web app to create and publish technical documents.  The package itself is pure Elm and relies on Evan Czaplicki's elm-tools/parser. It uses a diffing strategy suggested by Ilias van Peer which make performance in a day-to-day editing environment extremely fast (yay!)\n\nThe app ( under development at http://www.knode.io) will also process mathematical text. For this, it uses ports, since to process mathematical text, one must use the MathJax.js package as a kind of rendering server. We will briefly touch on this part of the design, and describe some of the technical challenges and performance issues.",
                "id": 1169,
                "length": 20,
                "startDate": "Thu Jul 05 08:40:00 +0000 2018",
                "title": "Making a Latex-to-Html Parser in Elm",
                "type": 0
              }
            ],
            "twitter": "epsilon2718"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1086/avatar.png",
            "bio": "Brian Hicks is the lead organizer of elm-conf and the author of The JSON Survival Kit. He lives in St. Louis with his wife, son, and cat, and works at NoRedInk.",
            "github": "BrianHicks",
            "id": 1086,
            "name": "Brian Hicks",
            "talks": [
              {
                "description": "Have you wanted to publish a package, but don't know where to begin? The Elm package ecosystem is filled with wonderful and useful packages, and it can be intimidating to try and add to that. But while it can take real effort to create something good, it doesn't have to feel so overwhelming! In this talk, I'll show you small, concrete steps to take so you can finally publish that code you've been sitting on. You'll leave with the confidence that you can make something really nice!",
                "id": 1137,
                "length": 20,
                "startDate": "Thu Jul 05 10:40:00 +0000 2018",
                "title": "Let's Publish Nice Packages",
                "type": 0
              }
            ],
            "twitter": "brianhicks"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1143/avatar.png",
            "bio": "I'm a programming language enthusiast. I've written lots of Ruby in the past, started using Elixir about 3 years ago and this year also started to use Elm for a new open source product I'm working on with friends in my spare time (Syncrypt).",
            "github": "bakkdoor",
            "id": 1143,
            "name": "Christopher Bertels",
            "talks": [
              {
                "description": "I'm a (co-)founder of Syncrypt, an open source, zero-knowledge, client-side & end-to-end encrypted file backup and sharing service. We started out with a CLI client & daemon written in Python, that does all encryption and uploading. Later we started working on a GUI written in JS, React and Electron. Since we're all mostly backend engineers by trade, we got tired of using JS (& React to be honest) after a short while of using it and decided to look for alternatives. I found out about Elm due to researching alternatives to React. It took me about 3 days to fully get the hang of the language but I felt productive from day 1. I'll talk about the learning curve, about how great the development tools are in learning the language itself and how I ended up with a working prototype (including JSON parsing!) after the first 3 days of working on the Elm based rewrite. The Elm UI talks to the python daemon via HTTP & JSON.",
                "id": 1175,
                "length": 20,
                "startDate": "Thu Jul 05 09:20:00 +0000 2018",
                "title": "Learning Elm in 3 days using the compiler - Switching from JS & React to Elm",
                "type": 0
              }
            ],
            "twitter": "bakkdoor"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1154/avatar.png",
            "bio": "Joël is a software developer at thoughtbot. He is passionate about best practices and building excellent software. Although he got his start with dynamically typed imperative languages, he has recently become fascinated with the statically typed functional world and Elm in particular. Outside of programming, Joël loves to study history. He often combines these two interests together to play with historically-themed software side projects.",
            "github": "JoelQ",
            "id": 1154,
            "name": "Joël Quenneville",
            "talks": [
              {
                "description": "One of the selling points of Elm is that you cannot get null errors. `Maybe` is\nwhat allows Elm to avoid this billion-dollar problem entirely. It's a beautiful\nsolution.\n\nBut it doesn't take too long before your code is one long ugly nested case\nstatement checking `Maybe`s at every level. Surely this can't be right. There must\nbe a better way.\n\nWe have an array of tools at our disposal to solve this problem, from simple\nconvenience functions all the way to eliminating `Maybe` altogether in favor of\nother constructs. Join me on a whirlwind tour of these solutions and take back\ncontrol of your codebase.",
                "id": 1234,
                "length": 20,
                "startDate": "Fri Jul 06 13:00:00 +0000 2018",
                "title": "Working with Maybe",
                "type": 0
              }
            ],
            "twitter": "joelquen"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1174/avatar.png",
            "bio": "Ian is the author of opensolid/geometry and several related Elm packages. He's passionate about using Elm as a platform for 3D design, visualization, engineering and manufacturing tools. He currently lives in New York and is at the Elm NYC meetup almost every month. He's on the Elm Slack as @ianmackenzie and is always happy to talk about geometry, using Elm to help make physical things, or just the nitty-gritty of WebGL rendering.",
            "github": "ianmackenzie",
            "id": 1174,
            "name": "Ian Mackenzie",
            "talks": [
              {
                "description": "This talk will look at some of the lessons learned from migrating the codebase of the opensolid/geometry package from its object-oriented origins in C++ and Scala to its current implementation in Elm.\n\nWe'll show how to take code that depends on various features found in object-oriented languages and rewrite that code in idiomatic Elm. For example, in a language without overloading or implicit conversions, how do you write functions that work with both vectors and unit vectors? Without inheritance, how do you share 3D transformation functionality between different types of geometry? Answering these questions carefully can require some significant \"conceptual refactoring\", but often results in Elm code that is simpler, clearer and more flexible than the original!",
                "id": 1241,
                "length": 20,
                "startDate": "Thu Jul 05 13:40:00 +0000 2018",
                "title": "Now you're thinking in functions: transitioning a decade-old codebase from C++ and Scala to Elm",
                "type": 0
              }
            ],
            "twitter": "ianemackenzie"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1211/avatar.png",
            "bio": "Luke is an engineer at NoRedInk and the developer of the online Elm editor Ellie. He lives in Los Angeles, CA, USA where he enjoys spending time with his wife and dog, studying politics and economics, and playing music.",
            "github": "lukewestby",
            "id": 1211,
            "name": "Luke Westby",
            "talks": [
              {
                "description": "Some things can't be done with Elm. It's a young language with so much potential to be realized in the years ahead. If a program you are writing today falls outside of Elm's capabilities, like writing a server, it can better to choose a different language. When it comes to fancy UI features, though, you might be able to have your cake and eat it too. In this talk you will learn about when and how to use web components in your Elm views. The most common inquiry we'll cover is interop with fancy JS UI packages that are not economically viable to replicate in Elm, like rich text editors. We'll also talk about components that make visual changes outside of the Elm update cycle for performance-critical UI behaviors, and more. The examples covered in this talk are based on production experience, fully compatible with Elm and all WHATWG specs, and can be polyfilled at least as far back as IE 11 and Safari 9.",
                "id": 1401,
                "length": 20,
                "startDate": "Fri Jul 06 13:40:00 +0000 2018",
                "title": "When and how to use Web Components with Elm",
                "type": 0
              }
            ],
            "twitter": ""
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1230/avatar.png",
            "bio": "Author of Style Elements, Elm Style Animation, and the O'Reilly book, Why Elm?, Matt is a Developer-in-Residence at Cornell Tech.",
            "github": "mdgriffith",
            "id": 1230,
            "name": "Matthew Griffith",
            "talks": [
              {
                "description": "Elm’s basis in immutability presents a unique set of challenges to animators.\n\nIn a language that allows mutation we can get away with hiding all our details behind local state, but in Elm we have to capture every detail in our model.  This means many of the APIs we may be familiar with in languages like Javascript don’t translate directly over to Elm in the nicest way.  Or they do translate, but require a lot of manual wiring and record keeping.\n\nHowever immutability is an incredible advantage and there’s no reason that advantage doesn’t translate into the realm of animation. The main challenge is adjusting our thinking around animation in Elm.\nSo, what does an immutable animator’s toolkit look like?\n\nBy slightly shifting our thinking and embracing Elm’s design decisions we can arrive at a unique set of tools and techniques that provides high level control over our animations and feels unique to the Elm language.",
                "id": 1261,
                "length": 20,
                "startDate": "Fri Jul 06 15:00:00 +0000 2018",
                "title": "The Immutable Animator’s Toolkit",
                "type": 0
              }
            ],
            "twitter": "mech_elephant"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1288/avatar.png",
            "bio": "Passionate developer, studying computer science. At home on the web. Building things with JavaScript, Elm, and Clojure.",
            "github": "paulsonnentag",
            "id": 1288,
            "name": "Paul Sonnentag",
            "talks": [
              {
                "description": "Github is a vast collection of code which could give us insights into how people are using Elm. The problem is that all the code is represented as text which limits our ability to analyze it automatically. In this talk, you will learn how we can leverage Elms statically typed nature to parse all public elm code on Github into a structured form which allows us to ask interesting questions like: \n\n- Give me examples how to use a specific library function? \n- How many people would be affected by changing some library functionality?\n- Is this library still used in recent code?",
                "id": 1419,
                "length": 20,
                "startDate": "Fri Jul 06 15:40:00 +0000 2018",
                "title": "3.9 million lines later - analyzing all open source elm code",
                "type": 0
              }
            ],
            "twitter": "paulsonnentag"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1313/avatar.png",
            "bio": "Italian. Working @NoRedInk. I like Elixir, Ruby, JavaScript and Machine Learning. I climb a lot.",
            "github": "Arkham",
            "id": 1313,
            "name": "Ju Liu",
            "talks": [
              {
                "description": "In this talk we will use the amazing powers of Elm to live code a Mondrian Art Generator. We will do a deep dive on building complex random generators and see how we can combine them to generate conceptual art. After that, we will go through a proof of concept that uses recursive random generators to achieve a similar effect.",
                "id": 1369,
                "length": 20,
                "startDate": "Thu Jul 05 15:40:00 +0000 2018",
                "title": "Live Coding a Mondrian Art Generator",
                "type": 0
              }
            ],
            "twitter": "arkh4m"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1319/avatar.png",
            "bio": "UI Engineer at Featurespace.  Previously web developer in Elm, Elixir & Python; digital factotum and academic (programming language theory). Runs the Cambridge (UK) Elm Meetup.",
            "github": "bitterjug",
            "id": 1319,
            "name": "Mark Skipper",
            "talks": [
              {
                "description": "The UI client of our ARIC Fraud Hub product is a 100k LOC Elm app.\nOver the last 18 months we ported it from Agnular 1 to Elm, and added many new features. \nOn the way we learned a lot. We'll present a summary of that story:\nHow we chose and adopted Elm.\nHow we made Elm and Angular play nice together during the migration.\nWhat we learned from using Elm with a team of ~6 engineers on a large complex project.\nAnd what we want in the future: from Elm and from ourselves.",
                "id": 1353,
                "length": 20,
                "startDate": "Fri Jul 06 09:20:00 +0000 2018",
                "title": "With Great Power Comes Great Responsibility: Lessons from 100k LOC Elm in production at Featurespace",
                "type": 0
              }
            ],
            "twitter": "axiologic"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1320/avatar.png",
            "bio": "Head of UI team at Featurespace. Main focus on Web Development,  10+ years experience in JavaScript and Ruby, and now also Elm.",
            "github": "decioferreira",
            "id": 1320,
            "name": "Decio Ferreira",
            "talks": [
              {
                "description": "The UI client of our ARIC Fraud Hub product is a 100k LOC Elm app.\nOver the last 18 months we ported it from Agnular 1 to Elm, and added many new features. \nOn the way we learned a lot. We'll present a summary of that story:\nHow we chose and adopted Elm.\nHow we made Elm and Angular play nice together during the migration.\nWhat we learned from using Elm with a team of ~6 engineers on a large complex project.\nAnd what we want in the future: from Elm and from ourselves.",
                "id": 1353,
                "length": 20,
                "startDate": "Fri Jul 06 09:20:00 +0000 2018",
                "title": "With Great Power Comes Great Responsibility: Lessons from 100k LOC Elm in production at Featurespace",
                "type": 0
              }
            ],
            "twitter": "deciojf"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1330/avatar.png",
            "bio": "Emma is a Senior Software Engineer at Second Spectrum, where she gets to solve all kinds of fun problems around how to build compelling data visualization and analytics apps for clients like the NBA and the LA Clippers. She co-founded and co-organizes the Elm LA meetup community as well as the local LA chapter of Write/Speak/Code.  Long ago, before becoming a software engineer, she became a lambda calculus enthusiast while working on formal semantics in a PhD program in theoretical linguistics.",
            "github": "emmacunningham",
            "id": 1330,
            "name": "Emma Cunningham",
            "talks": [
              {
                "description": "In this talk, I will share how my team at Second Spectrum went from the first group that was using Elm in production to how we spread excitement for Elm to other groups within our organization.  Through the talk, I will share lessons learned in terms of the challenges involved in onboarding those new to Elm (and functional programming) and the benefits we saw on our team after we started using Elm, as well as suggestions for those looking to use Elm in their organizations.  Finally, I’ll explain how, once we had lots of folks within our company using Elm, we leveraged that energy to start Elm LA, a local meetup that we started last year in Los Angeles, CA.  The audience will come away from the talk with actionable strategies on how to get buy-in within their organizations to start using Elm.",
                "id": 1517,
                "length": 20,
                "startDate": "Fri Jul 06 10:40:00 +0000 2018",
                "title": "Getting your organization onboard with Elm",
                "type": 0
              }
            ],
            "twitter": "emmatcu"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1343/avatar.png",
            "bio": "Developer\nStartup creator\nEvent organizer",
            "github": "tibastral",
            "id": 1343,
            "name": "Thibaut Assus",
            "talks": [
              {
                "description": "Elm helps us to think in terms of algorithms, not just in terms of \"let's make it work\". We can focus on one task at a time, without having the overhead of having to think in terms of \"the whole app\".\n\nAnd it allows us to pick highly complex subjects and tackle them for fun and profit.\n\nCreating a date picker like https://developer.apple.com/documentation/uikit/uidatepicker is very complex. We have to model the display with inline css 3d and requestanimationframe, the touch with touch events, the physics of the date picker with some physics theory. And doing that is javascript would mean handling every aspect of it in a \"global\" way.\n\nCreating a native looking date picker in elm means we can concentrate on the bigger vision (the date picker), one little function at a time, and it means we can do it in a reusable manner.\n\nThis talk will outline how we did it and what the result looks like, and it'll emphasise how we designed it.",
                "id": 1376,
                "length": 20,
                "startDate": "Fri Jul 06 10:00:00 +0000 2018",
                "title": "How to build a native looking date picker with elm, physics and css 3d",
                "type": 0
              }
            ],
            "twitter": "tibastral"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1372/avatar.png",
            "bio": "Alex is a visual data scientist who is interested in connecting computer power with the the power of the human brain to solve complex data-rich problems. His journey into Elm began in November 2017 when his former PhD supervisor Professor Jo Wood demoed him elm-vega and invited to take part in making LitVis. Before re-joining giCentre (City, University of London), Alex worked as a senior design researcher at Superspace, where he helped making humane urban environments with visual analytics.",
            "github": "kachkaev",
            "id": 1372,
            "name": "Alexander Kachkaev",
            "talks": [
              {
                "description": "We are drawn to Elm for many reasons: ‘compiler as assistant’, friendly error messages, pedagogic documentation, static typing, immutable data structures, pure functions. Yet the whole is more than the sum of its parts resulting in a programming philosophy that is declarative, task focussed and beginner-friendly. This talk considers how that philosophy influenced the design of elm-vega and the adoption of Elm as the primary language to illustrate Literate Visualization (LitVis).\n\nLitVis combines declarative specification of a visualization with a narrative that justifies its design. Elm and Vega are ideal languages for expression of the design and we describe how we integrated them with markdown to create a LitVis environment in Atom and VS Code. We describe how the Elm philosophy has influenced the design of LitVis and lessons learned. This has relevance not only for those interested in visualization with Elm but also anyone designing new packages and programming environments.",
                "id": 1428,
                "length": 20,
                "startDate": "Thu Jul 05 13:00:00 +0000 2018",
                "title": "Infecting the Visualization Design Process with the Elm Philosophy",
                "type": 0
              }
            ],
            "twitter": "gicentre"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1375/avatar.png",
            "bio": "I am a technology aficionado with a particular love for the web. I believe technology should make life simple and joyful, and I enjoy being able to prove so.\n\nAn Australian currently living in London with my wife, working for locomote.com as Head of Technology.\n\nI organise and run the Elm London Meetups, and frequently teach and speak about Elm to diverse audiences.",
            "github": "supermario",
            "id": 1375,
            "name": "Mario Rogic",
            "talks": [
              {
                "description": "Having total type-safety within an application in Elm makes working on projects a joy, especially long term when things get increasingly complicated and changing requirements abound. \n\nHowever what about type safety _between_ versions of our apps? \n\nOnce our applications are out in the wild, how do we get our users from version A to version B without throwing everything away in the transition? Could we use Elm's guarantees somehow to help us make this process smooth and enjoyable?\n\nThis talk will explore 12 months of research and prototyping on turning \"decidious\" Elm deployments into an \"evergreen\" affair.",
                "id": 1408,
                "length": 20,
                "startDate": "Fri Jul 06 08:40:00 +0000 2018",
                "title": "Evergreen Elm",
                "type": 0
              }
            ],
            "twitter": "realmario"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1380/avatar.png",
            "bio": "Entreprenerd shooting for the stars.",
            "github": "myrho",
            "id": 1380,
            "name": "Matthias Rella",
            "talks": [
              {
                "description": "Imagine Alice and Bob editing the same text document at the same time from different devices -- but both being offline. How could their changes be merged eventually so that both ends yield the same result and the intention of both probably conflicting editions is preserved?\nConflict-free replicated data types (CRDTs) to the rescue! In a mobile world with unreliable network connectivity, CRDTs allow for distributed offline-first applications integrating concurrent changes in a lightweight way. Data replicas are guaranteed to be eventually consistent among peers while keeping the context and order of merged operations. In this talk I will briefly describe CRDTs in general and why they matter to reactive Web development. Furthermore, I will present an Elm implementation of LSEQ - a CRDT for sequential data like text - and its binary serialization format. Finally, I will demo a collaborative Web app built on top of it.",
                "id": 1414,
                "length": 20,
                "startDate": "Thu Jul 05 10:00:00 +0000 2018",
                "title": "ElmSEQ: A conflict-free replicated data type for Elm",
                "type": 0
              }
            ],
            "twitter": "my_rho"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1403/avatar.png",
            "bio": "Andrey is a frontend engineer at SoundCloud. He is a maintainer of WebGL in Elm and an organizer of the Elm Berlin meetup. Apart from work, he enjoys live music in Berlin and is a yoga newbie.",
            "github": "w0rm",
            "id": 1403,
            "name": "Andrey Kuzmin",
            "talks": [
              {
                "description": "We get a lot for free from using the web platform. Rendering text is one of such things that browsers do well. But what if we wanted to implement this ourselves from scratch? Then we would not only have to learn typographic terms, but also understand their true behavior.\n\nHaving implemented the rendering of a typeface, that my wife designed, I would like to share the challenges of modelling the text flow in Elm. Even though this has a limited practical applicability, my hope is that you would not only get some insights into typeface properties, but also learn to appreciate the tools we have. And of course you will see how good it fits with Elm!",
                "id": 1438,
                "length": 20,
                "startDate": "Thu Jul 05 15:00:00 +0000 2018",
                "title": "Rendering text with WebGL",
                "type": 0
              }
            ],
            "twitter": "unsoundscapes"
          },
          {
            "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1463/avatar.png",
            "bio": "Developer and teacher, I created a training path dedicated to Python for OpenClassrooms, the European e-learning leading platform. Before that, I entered the startup world creating my own. When I'm not coding, I like laughing and hiking.",
            "github": "celine-m-s",
            "id": 1463,
            "name": "Céline Martinet Sanchez",
            "talks": [
              {
                "description": "Regardless of your knowledge level, writing a course is a good way to improve your skills. Explaining a concept lets you watch it under a different point of view, out of habits based on practice! Shall we wait to be an \"expert\" to publish a tutorial? How to explain what seems so simple or, by contrast, so complicated? Come to discover it!",
                "id": 1520,
                "length": 20,
                "startDate": "Thu Jul 05 14:20:00 +0000 2018",
                "title": "Teaching is learning: become a better dev sharing your knowledge.",
                "type": 0
              }
            ],
            "twitter": ""
          }
        ],
        "sponsors": {
          "diamond": [],
          "gold": [
            {
              "description": "Milesrock is a design and development consulting company. We produce functional programing code, including elm for front end.",
              "id": 38779,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/38779/logo.png",
              "name": "Milesrock",
              "url": ""
            }
          ],
          "partner": [
            {
              "description": "Lambda Days is a one of a kind experience in the functional world.",
              "id": 34012,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/34012/logo.png",
              "name": "Lambda Days",
              "url": "http://www.lambdadays.org"
            },
            {
              "description": "Nomalab is a digital logistics platform for films and audiovisual programs, from masters to ready-to-broadcast or ready-to-publish.",
              "id": 35641,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/35641/logo.png",
              "name": "Nomalab",
              "url": "https://www.nomalab.com/"
            },
            {
              "description": "The Efrei Group comprises two engineering schools, a digital academy, a research laboratory, a start-up incubator and an endowment fund, all grouped together on the Paris Sud campus of Villejuif.",
              "id": 35809,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/35809/logo.png",
              "name": "Efrei Paris",
              "url": "http://www.efrei.fr/"
            },
            {
              "description": "Efrei Entrepreneurs is the incubator of the Groupe Efrei. It hosts up to 12 start-ups for 6 to 12 months. They are assisted and followed and they can exchange with each other.",
              "id": 35810,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/35810/logo.png",
              "name": "Efrei Entrepreneurs",
              "url": "http://www.efreientrepreneurs.fr/"
            },
            {
              "description": "HEC Seed is an international conference that connects and empowers young entrepreneurs, students, investors and other professionals of the European entrepreneurial scene by employing a dynamic mix of inspiring speeches, hands-on workshops, competitive pitches and networking opportunities.",
              "id": 36070,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/36070/logo.png",
              "name": "HEC Seed 2018",
              "url": "http://hecseedparis.com/"
            },
            {
              "description": "Warren Walter assists you in your digital and innovative projects: consulting, technical assistance, training, design sprint, but also startups and tech events (hackathon, conference, show ...).",
              "id": 36141,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/36141/logo.png",
              "name": "Warren Walter",
              "url": "http://www.warren-walter.com/"
            },
            {
              "description": "Girls in Tech (GIT) is a global non-profit focused on the engagement, education and empowerment of girls and women who are passionate about technology.\nWith headquarters in San Francisco and more than 100,000 members located around the globe, GIT relies on volunteer efforts to lead each of the 60 local chapters.\nGIT is not just for professional women. We operate with the spirit of the girl within all of us—fearless, lively and determined.",
              "id": 37010,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/37010/logo.png",
              "name": "Girls in Tech",
              "url": "https://paris.girlsintech.org/"
            },
            {
              "description": "Evil Martians is a lean software development shop with headquarters in Moscow and New York and remote employees located all over the world. Using agile processes and our expertise in open-source technologies, we help startups to pivot and online businesses to grow.",
              "id": 39745,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/39745/logo.png",
              "name": "Evil Martians",
              "url": "https://evilmartians.com"
            },
            {
              "description": "ReactiveConf is a 3 day European-wide web & mobile development festival in the heart of Europe made for functional developers, where World-class JS experts share unique insights.",
              "id": 41180,
              "jobUrl": "",
              "logoUrl": "https://api.eventlama.com/events/167/purchases/41180/logo.png",
              "name": "ReactiveConf",
              "url": "https://reactiveconf.com/"
            }
          ],
          "platinum": []
        },
        "startDate": "Thu Jul 05 06:00:00 +0000 2018",
        "status": {
          "hasEnded": false,
          "hasStarted": false,
          "nextFiveScheduledItems": [
            {
              "description": "",
              "id": 1539,
              "speakers": [],
              "startDate": "Thu Jul 05 06:30:00 +0000 2018",
              "title": "Check in"
            },
            {
              "description": "",
              "id": 1540,
              "speakers": [],
              "startDate": "Thu Jul 05 07:00:00 +0000 2018",
              "title": "Breakfast"
            },
            {
              "description": "",
              "id": 1538,
              "speakers": [
                {
                  "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/928/avatar.png",
                  "bio": "Creator of elm",
                  "id": 928,
                  "name": "Evan Czaplicki",
                  "talks": [
                    {
                      "description": "",
                      "id": 1538,
                      "startDate": "Thu Jul 05 07:30:00 +0000 2018",
                      "title": "Keynote"
                    }
                  ],
                  "twitter": "czaplic"
                }
              ],
              "startDate": "Thu Jul 05 07:30:00 +0000 2018",
              "title": "Keynote"
            },
            {
              "description": "minilatex is an Elm package for converting a subset of LaTeX into Html -- a way to put LaTeX into the browser.  We will talk about the design and implementation of the parser and renderer, and how the package is used in a web app to create and publish technical documents.  The package itself is pure Elm and relies on Evan Czaplicki's elm-tools/parser. It uses a diffing strategy suggested by Ilias van Peer which make performance in a day-to-day editing environment extremely fast (yay!)\n\nThe app ( under development at http://www.knode.io) will also process mathematical text. For this, it uses ports, since to process mathematical text, one must use the MathJax.js package as a kind of rendering server. We will briefly touch on this part of the design, and describe some of the technical challenges and performance issues.",
              "id": 1169,
              "speakers": [
                {
                  "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/936/avatar.png",
                  "bio": "In other life, a mathematician.  Using Elm and Elixir to develop an awesome course notes app (http://www.knode.io - prerelease).  Fan of functional programming. Learning the double bass.",
                  "id": 936,
                  "name": "James Carlson",
                  "talks": [
                    {
                      "description": "minilatex is an Elm package for converting a subset of LaTeX into Html -- a way to put LaTeX into the browser.  We will talk about the design and implementation of the parser and renderer, and how the package is used in a web app to create and publish technical documents.  The package itself is pure Elm and relies on Evan Czaplicki's elm-tools/parser. It uses a diffing strategy suggested by Ilias van Peer which make performance in a day-to-day editing environment extremely fast (yay!)\n\nThe app ( under development at http://www.knode.io) will also process mathematical text. For this, it uses ports, since to process mathematical text, one must use the MathJax.js package as a kind of rendering server. We will briefly touch on this part of the design, and describe some of the technical challenges and performance issues.",
                      "id": 1169,
                      "startDate": "Thu Jul 05 08:40:00 +0000 2018",
                      "title": "Making a Latex-to-Html Parser in Elm"
                    }
                  ],
                  "twitter": "epsilon2718"
                }
              ],
              "startDate": "Thu Jul 05 08:40:00 +0000 2018",
              "title": "Making a Latex-to-Html Parser in Elm"
            },
            {
              "description": "I'm a (co-)founder of Syncrypt, an open source, zero-knowledge, client-side & end-to-end encrypted file backup and sharing service. We started out with a CLI client & daemon written in Python, that does all encryption and uploading. Later we started working on a GUI written in JS, React and Electron. Since we're all mostly backend engineers by trade, we got tired of using JS (& React to be honest) after a short while of using it and decided to look for alternatives. I found out about Elm due to researching alternatives to React. It took me about 3 days to fully get the hang of the language but I felt productive from day 1. I'll talk about the learning curve, about how great the development tools are in learning the language itself and how I ended up with a working prototype (including JSON parsing!) after the first 3 days of working on the Elm based rewrite. The Elm UI talks to the python daemon via HTTP & JSON.",
              "id": 1175,
              "speakers": [
                {
                  "avatarUrl": "https://api.eventlama.com/avatars/events/167/speakers/1143/avatar.png",
                  "bio": "I'm a programming language enthusiast. I've written lots of Ruby in the past, started using Elixir about 3 years ago and this year also started to use Elm for a new open source product I'm working on with friends in my spare time (Syncrypt).",
                  "id": 1143,
                  "name": "Christopher Bertels",
                  "talks": [
                    {
                      "description": "I'm a (co-)founder of Syncrypt, an open source, zero-knowledge, client-side & end-to-end encrypted file backup and sharing service. We started out with a CLI client & daemon written in Python, that does all encryption and uploading. Later we started working on a GUI written in JS, React and Electron. Since we're all mostly backend engineers by trade, we got tired of using JS (& React to be honest) after a short while of using it and decided to look for alternatives. I found out about Elm due to researching alternatives to React. It took me about 3 days to fully get the hang of the language but I felt productive from day 1. I'll talk about the learning curve, about how great the development tools are in learning the language itself and how I ended up with a working prototype (including JSON parsing!) after the first 3 days of working on the Elm based rewrite. The Elm UI talks to the python daemon via HTTP & JSON.",
                      "id": 1175,
                      "startDate": "Thu Jul 05 09:20:00 +0000 2018",
                      "title": "Learning Elm in 3 days using the compiler - Switching from JS & React to Elm"
                    }
                  ],
                  "twitter": "bakkdoor"
                }
              ],
              "startDate": "Thu Jul 05 09:20:00 +0000 2018",
              "title": "Learning Elm in 3 days using the compiler - Switching from JS & React to Elm"
            }
          ],
          "onGoing": false
        },
        "timezoneId": "Europe/Paris",
        "twitterHandle": "elm_europe",
        "venueCity": "Villejuif",
        "venueCountry": "France",
        "venueName": "Efrei",
        "websiteUrl": ""
      }
    ]
  }

